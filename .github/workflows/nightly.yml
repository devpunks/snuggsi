# https://github.com/containerd/containerd/blob/main/.github/workflows/release.yml
# https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows
# https://docs.github.com/en/actions/managing-workflow-runs-and-deployments/managing-workflow-runs/manually-running-a-workflow

name: "Crank Snuggsi"
description: "Reusable action to crank snuggsi"
#--------------------------------------------------------------------------
permissions: # added using https://github.com/step-security/secure-workflows
  actions: read
  checks: write
  issues: read
  contents: write
  packages: write
  deployments: write
  pull-requests: write
  repository-projects: write

on:
  schedule: # https://en.wikipedia.org/wiki/Cron
    - cron: "0 5 * * *" # Midnight EST
  push:
    branches:
      - main
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches:
      - main
  workflow_dispatch: {}

env:
  # Prevent script injection
  SNUGGSI: "."
  NODE_VERSION: "18.11.0"
  EMAIL: ${{ secrets.EMAIL }}
  AUTHOR: ${{ secrets.AUTHOR }}
  HEAD_REF: ${{ github.head_ref }}
  GH_REPO: ${{ github.repository }}
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
#--------------------------------------------------------------------------
# if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test
# jobs:
#   build:
#     name: Build
#     timeout-minutes: 5
#     runs-on: ubuntu-20.04
#     steps:
#       - name: Checkout
#       - uses: actions/checkout@v4
#       - name: Setup
#       - uses: actions/setup-node@v4
#         with:
#           node-version: '20.x'
#       - run: npm view
#       - run: npm run build --if-present
#     - name: Checkout
#       - uses: actions/checkout@v4
#         with:
#           fetch-depth: 0
#           fetch-tags: true
#           ref: ${{ github.ref }}
#           persist-credentials: true
#       - run: ls -al
#       - uses: actions/setup-node@v4
#           with:
#             cache: npm
#             node-version: 18
#       - run: pwd
#   - name: Install # https://github.com/marketplace/actions/setup-node-js-environment
#   - name: Update
#     - run: sudo apt-get update
#     - run: sudo apt-get install -y zopfl
#   - name: Install
#       run: npm install && npm view && node -v

#   - run: bin/compile

#   - name: Commit
#     run: >
#       git config user.name "github-actions"
#       git config user.email "github-actions@github.com"
#       git add .
#       git commit -m "Github Workflows" | true # ignore error if there are no changes to commit
#       git push origin HEAD:$HEAD_REF




#     # run: npm ci --ignore-scripts --no-audit --no-progress --prefer-offline
#--------------------------------------------------------------------------
# publish: # https://docs.github.com/en/actions/use-cases-and-examples/publishing-packages/publishing-nodejs-packages
#   needs: [build]
#   runs-on: ubuntu-20.04
#   permissions:
#     id-token: write
#   steps:
#     - name: Checkout
#       uses: actions/checkout@v4
#     # Setup .npmrc file to publish to npm
#     - name: Setup
#       uses: actions/setup-node@v4
#       with:
#         node-version: 18
#         registry-url: 'https://registry.npmjs.org'
#     - run: npm install
#     - run: npm list
#     - run: npm publish --provenance --access public
#--------------------------------------------------------------------------
# dump:
#   runs-on: ubuntu-20.04
#   steps:
#     - name: Dump GitHub context
#       env:
#         GITHUB_CONTEXT: ${{ toJson(github) }}
#       run: echo "$GITHUB_CONTEXT"
#     - name: Dump job context
#       env:
#         JOB_CONTEXT: ${{ toJson(job) }}
#       run: echo "$JOB_CONTEXT"
#     - name: Dump steps context
#       env:
#         STEPS_CONTEXT: ${{ toJson(steps) }}
#       run: echo "$STEPS_CONTEXT"
#     - name: Dump runner context
#       env:
#         RUNNER_CONTEXT: ${{ toJson(runner) }}
#       run: echo "$RUNNER_CONTEXT"
#     - name: Dump strategy context
#       env:
#         STRATEGY_CONTEXT: ${{ toJson(strategy) }}
#       run: echo "$STRATEGY_CONTEXT"
#     - name: Dump matrix context
#       env:
#         MATRIX_CONTEXT: ${{ toJson(matrix) }}
#       run: echo "$MATRIX_CONTEXT"
#--------------------------------------------------------------------------
#   - name: Test
#     shell: bash
#     env:
#       # Prevent script injection
#       SNUGGSI: "."
#     run: node ./*.test.es

#   - name: Cover
#     shell: bash
#     env:
#       # Prevent script injection
#       SNUGGSI: "."
#       NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
#     run: npm list && npm run
#--------------------------------------------------------------------------
# check:
#   needs: build
#   timeout-minutes: 5
#   name: Check Signed Tag
#   runs-on: ubuntu-latest
#   if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
#   outputs:
#     stringver: ${{ steps.contentrel.outputs.stringver }}

#   steps:
#     - name: Checkout code
#       uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
#       with:
#         fetch-tags: true
#         ref: ${{ github.ref }}
#         path: src/github.com/devpunks/snuggsi

#     - name: Set env
#       shell: bash
#       run: |
#         echo "BEFORE SHAZZZAAAM!"
#         echo "${{ github.workspace }}" >> $GITHUB_ENV
#         echo "${{ github.workspace }}/bin" >> $GITHUB_PATH
#         echo "AFTER SHAZZZAAAM!"

#     - name: Set RELEASE_VER
#       if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
#       shell: bash
#       run: |
#         releasever=${{ github.ref }}
#         releasever="${releasever#refs/tags/}"
#         echo "RELEASE_VER=${releasever}" >> $GITHUB_ENV

#     - name: Check signature
#       working-directory: src/github.com/devpunks/snuggsi
#       run: |
#         releasever=${{ github.ref }}
#         releasever="${releasever#refs/tags/}"
#         TAGCHECK=$(git tag -v ${releasever} 2>&1 >/dev/null) ||
#         echo "${TAGCHECK}" | grep -q "error" && {
#             echo "::error::tag ${releasever} is not a signed tag. Failing release process."
#             exit 1
#         } || {
#             echo "Tag ${releasever} is signed."
#             exit 0
#         }

#--------------------------------------------------------------------------
# archive:
#   timeout-minutes: 5
#   name: Archive Release
#   runs-on: ubuntu-latest
#   outputs:
#     stringver: ${{ steps.contentrel.outputs.stringver }}

#   steps:
#     - name: Release content
#       id: contentrel
#       run: |
#         RELEASEVER=${{ github.ref }}
#         echo "stringver=${RELEASEVER#refs/tags/v}" >> $GITHUB_OUTPUT
#         git tag -l ${RELEASEVER#refs/tags/} -n20000 | tail -n +3 | cut -c 5- >release-notes.md
#       working-directory: src/github.com/devpunks/snuggsi

#     - name: Save release notes
#       uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
#       with:
#         name: snuggsi-release-notes
#         path: src/github.com/devpunks/snuggsi/CHANGELOG.md
