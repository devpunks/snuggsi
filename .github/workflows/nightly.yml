# https://github.com/containerd/containerd/blob/main/.github/workflows/release.yml
# https://devtron.ai/blog/create-ci-cd-pipelines-with-github-actions-for-kubernetes-the-definitive-guide
# https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows
# https://docs.github.com/en/actions/managing-workflow-runs-and-deployments/managing-workflow-runs/manually-running-a-workflow

name: "Nightly"
description: "Nightly snuggsi ãƒ„ Build"
#--------------------------------------------------------------------------
permissions: # added using https://github.com/step-security/secure-workflows
  issues: none
  checks: none
  actions: write
  contents: write
  id-token: write # Provenance
  packages: none
  deployments: none
  pull-requests: none
  repository-projects: none
#--------------------------------------------------------------------------
on:
  schedule: # https://en.wikipedia.org/wiki/Cron
    - cron: "0 23 * * *" # Midnight EST
  push:
    branches:
      - main
  workflow_dispatch: {}
#--------------------------------------------------------------------------
env:
  # Prevent script injection
  EMAIL: ${{ secrets.EMAIL }}
  AUTHOR: ${{ secrets.AUTHOR }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
#--------------------------------------------------------------------------
# if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
jobs:
#--------------------------------------------------------------------------
  dump:
    if: false
    runs-on: ubuntu-20.04
    steps: # --------------------------------------------------------------
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
#--------------------------------------------------------------------------
  build:
    if: false
    name: Build
    needs: [dump]
    timeout-minutes: 5
    runs-on: ubuntu-20.04
    steps: # --------------------------------------------------------------
      - name: Update
        run: |
          sudo apt-get update
          sudo apt-get install -y zopfli

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: false
          ref: ${{ github.ref }}
          persist-credentials: true

      - name: Setup # https://github.com/marketplace/actions/setup-node-js-environment
        uses: actions/setup-node@v4 # https://github.com/actions/setup-node
        with:
          cache: npm
          node-version: 18.x
          # https://github.com/actions/setup-node/blob/main/docs/advanced-usage.md#working-with-lockfiles
          cache-dependency-path: 'npm-shrinkwrap.json'

      - name: Install
        run: |
          npm ci --no-audit --no-progress --ignore-scripts --prefer-offline
          npm version

      - name: Compile
        run: bin/compile
#--------------------------------------------------------------------------
  publish: # https://docs.github.com/en/actions/use-cases-and-examples/publishing-packages/publishing-nodejs-packages
    if: false
    name: Publish
    needs: [build]
    runs-on: ubuntu-20.04
    steps: # --------------------------------------------------------------
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true
        persist-credentials: true
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        registry-url: 'https://registry.npmjs.org'
#   - run: |
#       print "${GPG_SIGNING_KEY}" | base64 --decode > private.key
#       ls -al *.key
#       gpg --import private.key
#       gpg --list-keys
    - run: |
        git config user.name "$AUTHOR"
        git config user.email "$EMAIL"
    - run: bin/version
#--------------------------------------------------------------------------
  archive: # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/storing-and-sharing-data-from-a-workflow
#   needs: [publish]
    timeout-minutes: 5
    name: Archive
    runs-on: ubuntu-20.04
#   outputs:
#     stringver: ${{ steps.contentrel.outputs.stringver }}
    steps: # --------------------------------------------------------------
    - name: Checkout
      uses: actions/checkout@v4

    - name: Notate
      run: echo Notating

    - name: Artifact
      uses: actions/upload-artifact@v4 # https://github.com/actions/upload-artifact
        with:
          retention-days: 30
          compression-level: 9
          name: dist-without-markdown
          path: |
            dist
            !dist/*.md
#     # run: echo Artifacting

#     - name: Archive code coverage results
#       uses: actions/upload-artifact@v4 # https://github.com/actions/upload-artifact
#       with:
#         name: code-coverage-report
#         path: ./code-coverage.html
#       run: |
#         RELEASEVER=${{ github.ref }}
#         echo "stringver=${RELEASEVER#refs/tags/v}" >> $GITHUB_OUTPUT
#         git tag -l ${RELEASEVER#refs/tags/} -n20000 | tail -n +3 | cut -c 5- >release-notes.md
#       working-directory: src/github.com/devpunks/snuggsi

#     - name: Save release notes
#       uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
#       with:
#         name: snuggsi-release-notes
#         path: src/github.com/devpunks/snuggsi/CHANGELOG.md
#--------------------------------------------------------------------------
#   - name: Test
#     shell: bash
#     env:
#       # Prevent script injection
#       SNUGGSI: "."
#     run: node ./*.test.es

#   - name: Cover
#     shell: bash
#     env:
#       # Prevent script injection
#       SNUGGSI: "."
#       NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
#     run: npm list && npm run
#--------------------------------------------------------------------------
# check:
#   needs: build
#   timeout-minutes: 5
#   name: Check Signed Tag
#   runs-on: ubuntu-20.04
#   if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
#   outputs:
#     stringver: ${{ steps.contentrel.outputs.stringver }}

#   steps:
#     - name: Checkout code
#       uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
#       with:
#         fetch-tags: true
#         ref: ${{ github.ref }}
#         path: src/github.com/devpunks/snuggsi

#     - name: Set env
#       shell: bash
#       run: |
#         echo "BEFORE SHAZZZAAAM!"
#         echo "${{ github.workspace }}" >> $GITHUB_ENV
#         echo "${{ github.workspace }}/bin" >> $GITHUB_PATH
#         echo "AFTER SHAZZZAAAM!"

#     - name: Set RELEASE_VER
#       if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
#       shell: bash
#       run: |
#         releasever=${{ github.ref }}
#         releasever="${releasever#refs/tags/}"
#         echo "RELEASE_VER=${releasever}" >> $GITHUB_ENV

#     - name: Check signature
#       working-directory: src/github.com/devpunks/snuggsi
#       run: |
#         releasever=${{ github.ref }}
#         releasever="${releasever#refs/tags/}"
#         TAGCHECK=$(git tag -v ${releasever} 2>&1 >/dev/null) ||
#         echo "${TAGCHECK}" | grep -q "error" && {
#             echo "::error::tag ${releasever} is not a signed tag. Failing release process."
#             exit 1
#         } || {
#             echo "Tag ${releasever} is signed."
#             exit 0
#         }
