#!/usr/bin/env bash

echo
echo "  ツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツ"
echo "  ツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツ"
echo "  ツツツツツツツツツツツツツツツツ                  ツツツツツツツツツツツツツツツ"
echo "  ツツツツツツツツツツツツツツツツ     snuggsi ツ   ツツツツツツツツツツツツツツツ"
echo "  ツツツツツツツツツツツツツツツツ                  ツツツツツツツツツツツツツツツ"
echo "  ツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツ"
echo "  ツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツツ"
echo

function canonical {
  echo Canonical location for:
}


# http://www.tldp.org/LDP/abs/html/parameter-substitution.html
# https://stackoverflow.com/questions/35006457/choosing-between-0-and-bash-source
# https://unix.stackexchange.com/questions/41571/what-is-the-difference-between-and
# https://serverfault.com/questions/52034/what-is-the-difference-between-double-and-single-square-brackets-in-bash
# https://unix.stackexchange.com/questions/17499/get-path-of-current-script-when-executed-through-a-symlink

#PATH=$1

canonical

echo "one and two $0 $1 $2"

PARAMS=$@
DIR=`dirname $BASH_SOURCE` # References scalar BASH_SOURCE returns index @ 0
ROOT=`dirname $(readlink $0)`

echo "PWD: `pwd`"
echo "DIR: $DIR"
echo "ROOT: $ROOT"
echo "PARAMS: $PARAMS"
echo "PARAMS Lenth: ${#@}"

ls $DIR
readlink $0

for PARAM in PARAMS
do
# if [[ $PARAM == -* ]
  if [[ -d $PARAM ]]; then
    echo $PARAM
  else
    echo "NO DIRECTORY $PARAM"
  fi
done
