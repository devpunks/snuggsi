const
  path = '/foo/'
, URL  = `http://localhost:8181${path}`

, { test, read, fetch }
    = require ('test')

, { Server, Resource }
    = require ('..')

, route
    = require ('../middleware')
      .route  ( `${path}{id}`, Resource `server/fixtures` )

, METHODS = Array
    .from ( require ('http').METHODS )

, SAFE_METHODS = ['OPTIONS', 'HEAD', 'GET']

, NONSAFE_METHODS = METHODS.filter
    (method => !!! SAFE_METHODS.includes (method))


test.only ('Allowed methods', async t => {
  const
    server =
      (new Server ( [ route ] ))
      .serve ``

  for (method of SAFE_METHODS) {
    let
      endpoint = [ URL, { method } ]
    , response = await fetch ( `${URL}14` )
    , { status, headers } = response

    console.warn ('method', method, URL, status, headers)

    t.equals (200, status, headers)
  }

  server.close ``
  t.end ()
})


test ('new Resource', async t => {

  const
    method = 'TRACE'

  , endpoint =
      [ `${URL}14`, { method } ]

  , server =
      (new Server ( [ route ] ))
      .serve ``

  , response =
      await fetch ( ... endpoint )

  , { status, body } = response

  console.warn ('Resp', status, response.headers,  await response.text (), NONSAFE_METHODS, SAFE_METHODS)


  server.close ``
  t.end ()
})
